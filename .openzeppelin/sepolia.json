{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8543343DC4f3953cCA99e325869Fd7e909AB0AFA",
    "txHash": "0x66ff39f0eabd0fdea5a5f4b30e270b3da1bfbe8bc88d48d9ba0aeef2ddd70d57"
  },
  "proxies": [
    {
      "address": "0x2101AC002A2d6891FCC0191267D6e3fDEf9D8b40",
      "txHash": "0x4972e23a852c38c7912130232b1bc4f0ae3be193f2605096c1e7620c8443e874",
      "kind": "transparent"
    },
    {
      "address": "0x32C289fc337371A9E5862DA7ea6ee9dAa5864B28",
      "txHash": "0x683b396076c3ed1a9eb63bc625e19ea02addeb992ee0c99fa9d540f88ac54011",
      "kind": "transparent"
    },
    {
      "address": "0xEbDa5504a048faF7Ff6Acf6e7eE4112E7dB17FA2",
      "txHash": "0x9f51439bf6648435c1a2355e5879d9ddafd785cf7df52564ca4b66cc15729372",
      "kind": "transparent"
    },
    {
      "address": "0xB80A4716a88a7CC5857Fb627BD0E1D2f96aEb8DA",
      "txHash": "0xf791970c55fa92d3d4d431e8aad31eeaf452484acc8c9653ee092b16fb5183cf",
      "kind": "transparent"
    },
    {
      "address": "0x0d2763549133AD1A1d00615905FC8778043912F1",
      "txHash": "0x4485ec1e8f7583d56883ee4e7f3cccbac0bb61f345c0d26bb76accf5f66bc267",
      "kind": "transparent"
    },
    {
      "address": "0xa7a26911f9d7377B2b1071D3f47Ddff60Ab54F5B",
      "txHash": "0x3df1ff8825b540d40307b95fee6c324150576cbaf156154d6a82aa43f51df096",
      "kind": "transparent"
    },
    {
      "address": "0x5c43A4e5D8C80027CfdFaCD2dE3e30981113f926",
      "txHash": "0x12c59168dfef06414afb9b94b491de69029945043465fb23712d0bdea8db8c85",
      "kind": "transparent"
    },
    {
      "address": "0x8fc49BC8335751CbD60df6459a7036b12fAE373D",
      "txHash": "0x400cd94548b7204e178e6ab303bff4da156e147a53adfab395e0720bbadeb351",
      "kind": "transparent"
    },
    {
      "address": "0xfBc24Fa831949D0F6299e50977f67d2EB5D1F506",
      "txHash": "0x23535eb414dfb2a89ccba030ad9ee61281d58c5d866407aa5b35cafe5e73cd11",
      "kind": "transparent"
    },
    {
      "address": "0x721f7BAE16b7dfdafF22Cc149c909d8527da109a",
      "txHash": "0xae1f6b865c2bba629dfbb513ad0a7f5838e25c7bc38511b8622f6a68f450106e",
      "kind": "transparent"
    },
    {
      "address": "0x5E8827dF0f496Cd0710B25C4EB37A550242fCF1b",
      "txHash": "0xd94124e9636965c295a38354917bacd3b54f08890bb7e7b57f75a122b2cdd2fc",
      "kind": "transparent"
    },
    {
      "address": "0x83b5691956F4838b9DDAD979AB4233bB8d54fA07",
      "txHash": "0x8fe6c644694654c364f52777d113cd98942ebe50995067d2a8cfd2ad66c7de91",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e21855bcb8ae6042da5bb2d9c5847c8bc13d835ce45697f5560781baf7b89d41": {
      "address": "0x8958767f6e9458D0B13A72d9ad240C4b98e90303",
      "txHash": "0x3e4ce654462b7390f1de8eef963a6d6f62add6fe05698c415e5a68c707b12e85",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_liquidity721Metadata",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:12"
          },
          {
            "label": "_liquidity1155Metadata",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:13"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:14"
          },
          {
            "label": "_vault",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:15"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e8b9c545d77ef91a64914fe5b26897d1cdafb2e3ace3255e6a7cc327360fba04": {
      "address": "0x6EaEb199a888ecA37E48c3198fF58D898ac4234e",
      "txHash": "0x56cab6bd2cb68c3d908b3c516d57e55c337387c9b575e4ea0579f71a6ef61c64",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:34"
          },
          {
            "label": "_liquidityTokens",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:35"
          },
          {
            "label": "_liquidityIdToken",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:36"
          },
          {
            "label": "_liquidityCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:37"
          },
          {
            "label": "_liquidity721",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Liquidity721)6150_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:38"
          },
          {
            "label": "_liquidity1155",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(Liquidity1155)6172_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:39"
          },
          {
            "label": "_liquidityTokenStandard",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_enum(TokenStandard)6197)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "158",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:41"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LiquidityType)6126": {
            "label": "enum DataTypes.LiquidityType",
            "members": [
              "Trade",
              "TradeUp",
              "TradeDown",
              "Buy",
              "Sell",
              "Swap"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenStandard)6197": {
            "label": "enum DataTypes.TokenStandard",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TokenStandard)6197)": {
            "label": "mapping(uint256 => enum DataTypes.TokenStandard)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity1155)6172_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity1155)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity721)6150_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity721)",
            "numberOfBytes": "32"
          },
          "t_struct(Liquidity1155)6172_storage": {
            "label": "struct DataTypes.Liquidity1155",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)6126",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Liquidity721)6150_storage": {
            "label": "struct DataTypes.Liquidity721",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "swapFee",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)6126",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0e80e1fd89b5892ad477c98a49a07c96e6f6e0fa22193e8e551cb04cb1edece5": {
      "address": "0xa99F5652c00396453bB3A25F06DF22434493af79",
      "txHash": "0x7253bd56b12f198c37da71cec6b7878d27dac8441f0e1017259bf54cebcf9c35",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:20"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3954f15428b1249f7b72e56154f3a808de75513ae3794c9c227ce29bf41bade5": {
      "address": "0xb5344F290f8d7b171Cff785885016f21a4e8603E",
      "txHash": "0xdcbfc320b9e5b06dc70549f20fa40b34e35d68ea812dfe49f421ac8be9e76700",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:34"
          },
          {
            "label": "_liquidityTokens",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:35"
          },
          {
            "label": "_liquidityIdToken",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:36"
          },
          {
            "label": "_liquidityCount",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:37"
          },
          {
            "label": "_liquidity721",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Liquidity721)6138_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:38"
          },
          {
            "label": "_liquidity1155",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(Liquidity1155)6160_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:39"
          },
          {
            "label": "_liquidityTokenStandard",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_enum(TokenStandard)6185)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "158",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:41"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LiquidityType)6114": {
            "label": "enum DataTypes.LiquidityType",
            "members": [
              "Trade",
              "TradeUp",
              "TradeDown",
              "Buy",
              "Sell",
              "Swap"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenStandard)6185": {
            "label": "enum DataTypes.TokenStandard",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TokenStandard)6185)": {
            "label": "mapping(uint256 => enum DataTypes.TokenStandard)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity1155)6160_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity1155)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity721)6138_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity721)",
            "numberOfBytes": "32"
          },
          "t_struct(Liquidity1155)6160_storage": {
            "label": "struct DataTypes.Liquidity1155",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)6114",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Liquidity721)6138_storage": {
            "label": "struct DataTypes.Liquidity721",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "swapFee",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)6114",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "30dfe3cde3e4643ff3ddfbd7e334104f0e43ceaeea8902326cbf9daea0048126": {
      "address": "0x9cD9A3D5Bb004812ccD80a305e61f1b4db5d9B43",
      "txHash": "0xf326a4ea6a32ce5836ff67af1e2c90c666ea47cc1b0bcda171eb5c5f4659184a",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:20"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "219d2b868f14c51a12a8c98e64fced2391ddd4c04785c6dd9705a479807948d5": {
      "address": "0xfd526bD1B31F300e9C2614E3e70950820076113e",
      "txHash": "0x358141b6cd9a567a6d7939f554fa3da29f50405cd571eb1ccd978daad3a145ec",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_liquidity721Metadata",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:12"
          },
          {
            "label": "_liquidity1155Metadata",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:13"
          },
          {
            "label": "_votingEscrow",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:14"
          },
          {
            "label": "_vault",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:15"
          },
          {
            "label": "_feeDistributor",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AddressProvider",
            "src": "contracts/protocol/AddressProvider.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "2259550b407e63a24df049e0e9178c2b60717ec47d420c4b6cbf5458c43acfc5": {
      "address": "0x58fdf9Ba452Be8f7D741Bc8f864f4caf9645Df13",
      "txHash": "0x8c468a018194c94ccaefac421172e937698e309529ce38a3a97830c06563d44b",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:34"
          },
          {
            "label": "_liquidityTokens",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:35"
          },
          {
            "label": "_liquidityIdToken",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:36"
          },
          {
            "label": "_liquidityCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:37"
          },
          {
            "label": "_liquidity721",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Liquidity721)8218_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:38"
          },
          {
            "label": "_liquidity1155",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Liquidity1155)8240_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:39"
          },
          {
            "label": "_liquidityTokenStandard",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_enum(TokenStandard)8265)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "7",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:41"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LiquidityType)8194": {
            "label": "enum DataTypes.LiquidityType",
            "members": [
              "Trade",
              "TradeUp",
              "TradeDown",
              "Buy",
              "Sell",
              "Swap"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenStandard)8265": {
            "label": "enum DataTypes.TokenStandard",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TokenStandard)8265)": {
            "label": "mapping(uint256 => enum DataTypes.TokenStandard)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity1155)8240_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity1155)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity721)8218_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity721)",
            "numberOfBytes": "32"
          },
          "t_struct(Liquidity1155)8240_storage": {
            "label": "struct DataTypes.Liquidity1155",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)8194",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Liquidity721)8218_storage": {
            "label": "struct DataTypes.Liquidity721",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "swapFee",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)8194",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3b0f53ae0b255abac77dff4ec7f8d54b3f030d7d7dabe0d8fcba0256bc97a807": {
      "address": "0xE5548c5Cc4eF8A28E7FCE243325a614aB527a012",
      "txHash": "0xe37ff8dc8e1ee2dffe7ad8d3073b531ab81a61f13afe9f70c80e34cad965c2a0",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:20"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "63fc549c77249df0548af7128709489a467dad1c13a65cfeb1d4b59cc1f8b09f": {
      "address": "0xdCe9C073763E28d1ddCCF1a53693Ea6730CCdF53",
      "txHash": "0xfbd27afd98d6a5089d8df8de297cf9a9aec4a7be574bcbb95954d815f13229c7",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_isPriceCurve",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:34"
          },
          {
            "label": "_liquidityTokens",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:35"
          },
          {
            "label": "_liquidityIdToken",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:36"
          },
          {
            "label": "_liquidityCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:37"
          },
          {
            "label": "_liquidity721",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Liquidity721)6068_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:38"
          },
          {
            "label": "_liquidity1155",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(Liquidity1155)6090_storage)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:39"
          },
          {
            "label": "_liquidityTokenStandard",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_enum(TokenStandard)6115)",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "7",
            "type": "t_bool",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:41"
          },
          {
            "label": "_protocolFeePercentage",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts/protocol/Trading/Vault.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LiquidityType)6044": {
            "label": "enum DataTypes.LiquidityType",
            "members": [
              "Trade",
              "TradeUp",
              "TradeDown",
              "Buy",
              "Sell",
              "Swap"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenStandard)6115": {
            "label": "enum DataTypes.TokenStandard",
            "members": [
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(TokenStandard)6115)": {
            "label": "mapping(uint256 => enum DataTypes.TokenStandard)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity1155)6090_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity1155)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Liquidity721)6068_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Liquidity721)",
            "numberOfBytes": "32"
          },
          "t_struct(Liquidity1155)6090_storage": {
            "label": "struct DataTypes.Liquidity1155",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "nftAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)6044",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Liquidity721)6068_storage": {
            "label": "struct DataTypes.Liquidity721",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nft",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nftIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "swapFee",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "spotPrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "delta",
                "type": "t_uint128",
                "offset": 16,
                "slot": "4"
              },
              {
                "label": "curve",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "liquidityType",
                "type": "t_enum(LiquidityType)6044",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4927ea403665bc06b4c4882a698686b76897fb9154518f2a42b2cf8eb3ef40db": {
      "address": "0xEc3B95D1016e239Fb3Ed95AcB9AD6555Adc57aAa",
      "txHash": "0xed9c058372ebe0196b7ba00e89a4c11426012a5d0359f18d929a60ec5514007f",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_lockHistoryPointer",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:20"
          },
          {
            "label": "_epochFees",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:22"
          },
          {
            "label": "_lockNextClaimableEpoch",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:23"
          },
          {
            "label": "_accountedFees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeDistributor",
            "src": "contracts/protocol/FeeDistributor.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
